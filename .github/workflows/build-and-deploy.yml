name: Build images and deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        type: environment
      build_images: 
        description: "Build image prior to deploy"
        required: true
        type: boolean
        default: false

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.build_images == 'true' }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}/awesome-bulletins:latest

  deploy:
    needs: build-and-push-images
    if: |
     always() && (needs.build-and-push-images.result == 'success' || needs.build-and-push-images.result == 'skipped')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Print selected environment
        run: |
          echo "Deploying to ${{ github.event.inputs.environment }}"
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy files via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "./docker-compose.prod.yml, ./docker-compose.yml"
          target: "./app"

      - name: Prepare environment
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            whoami
            uname -a
            cd ./app

            echo "Stopping containers for update"
            docker compose -f docker-compose.yml -f docker-compose.prod.yml down

            echo "Preparing environment variables"
            export GITHUB_CLIENT_ID=${{ secrets.CLIENT_ID }}
            export GITHUB_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
            export S3_ENDPOINT=${{ vars.S3_ENDPOINT }}
            export S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }}
            export S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }}
            export S3_REGION=${{ vars.S3_REGION }}
            export S3_BUCKET=${{ vars.S3_BUCKET }}
            export DATABASE_URL=${{ vars.DATABASE_URL }}
            export PGPASSWORD=${{ secrets.PGPASSWORD }}
            export PGUSER=${{ secrets.PGUSER }}
            export SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}

            echo "Logging in to github container registry"
            docker login ghcr.io/${{ github.repository }} -u ${{ secrets.actor }} -p {{ secrets.GITHUB_TOKEN }}

            echo "Pulling new images"
            docker compose -f docker-compose.yml -f docker-compose.prod.yml pull

            echo "Starting up containers"
            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d

            echo "Logging out from registry"
            docker logout